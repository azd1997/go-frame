// Code generated by protoc-gen-go. DO NOT EDIT.
// source: server.proto

package server

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ServerTimeRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServerTimeRequest) Reset()         { *m = ServerTimeRequest{} }
func (m *ServerTimeRequest) String() string { return proto.CompactTextString(m) }
func (*ServerTimeRequest) ProtoMessage()    {}
func (*ServerTimeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{0}
}

func (m *ServerTimeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerTimeRequest.Unmarshal(m, b)
}
func (m *ServerTimeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerTimeRequest.Marshal(b, m, deterministic)
}
func (m *ServerTimeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerTimeRequest.Merge(m, src)
}
func (m *ServerTimeRequest) XXX_Size() int {
	return xxx_messageInfo_ServerTimeRequest.Size(m)
}
func (m *ServerTimeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerTimeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ServerTimeRequest proto.InternalMessageInfo

type ServerTimeResponse struct {
	Code                 uint32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg                  string                  `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data                 *ServerTimeResponseData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ServerTimeResponse) Reset()         { *m = ServerTimeResponse{} }
func (m *ServerTimeResponse) String() string { return proto.CompactTextString(m) }
func (*ServerTimeResponse) ProtoMessage()    {}
func (*ServerTimeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{1}
}

func (m *ServerTimeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerTimeResponse.Unmarshal(m, b)
}
func (m *ServerTimeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerTimeResponse.Marshal(b, m, deterministic)
}
func (m *ServerTimeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerTimeResponse.Merge(m, src)
}
func (m *ServerTimeResponse) XXX_Size() int {
	return xxx_messageInfo_ServerTimeResponse.Size(m)
}
func (m *ServerTimeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerTimeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ServerTimeResponse proto.InternalMessageInfo

func (m *ServerTimeResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ServerTimeResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *ServerTimeResponse) GetData() *ServerTimeResponseData {
	if m != nil {
		return m.Data
	}
	return nil
}

type ServerTimeResponseData struct {
	ServerTime           uint64   `protobuf:"varint,1,opt,name=server_time,json=serverTime,proto3" json:"server_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServerTimeResponseData) Reset()         { *m = ServerTimeResponseData{} }
func (m *ServerTimeResponseData) String() string { return proto.CompactTextString(m) }
func (*ServerTimeResponseData) ProtoMessage()    {}
func (*ServerTimeResponseData) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{2}
}

func (m *ServerTimeResponseData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerTimeResponseData.Unmarshal(m, b)
}
func (m *ServerTimeResponseData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerTimeResponseData.Marshal(b, m, deterministic)
}
func (m *ServerTimeResponseData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerTimeResponseData.Merge(m, src)
}
func (m *ServerTimeResponseData) XXX_Size() int {
	return xxx_messageInfo_ServerTimeResponseData.Size(m)
}
func (m *ServerTimeResponseData) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerTimeResponseData.DiscardUnknown(m)
}

var xxx_messageInfo_ServerTimeResponseData proto.InternalMessageInfo

func (m *ServerTimeResponseData) GetServerTime() uint64 {
	if m != nil {
		return m.ServerTime
	}
	return 0
}

func init() {
	proto.RegisterType((*ServerTimeRequest)(nil), "server.ServerTimeRequest")
	proto.RegisterType((*ServerTimeResponse)(nil), "server.ServerTimeResponse")
	proto.RegisterType((*ServerTimeResponseData)(nil), "server.ServerTimeResponseData")
}

func init() { proto.RegisterFile("server.proto", fileDescriptor_ad098daeda4239f7) }

var fileDescriptor_ad098daeda4239f7 = []byte{
	// 188 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x29, 0x4e, 0x2d, 0x2a,
	0x4b, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x83, 0xf0, 0x94, 0x84, 0xb9, 0x04,
	0x83, 0xc1, 0xac, 0x90, 0xcc, 0xdc, 0xd4, 0xa0, 0xd4, 0xc2, 0xd2, 0xd4, 0xe2, 0x12, 0xa5, 0x3c,
	0x2e, 0x21, 0x64, 0xc1, 0xe2, 0x82, 0xfc, 0xbc, 0xe2, 0x54, 0x21, 0x21, 0x2e, 0x96, 0xe4, 0xfc,
	0x94, 0x54, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xde, 0x20, 0x30, 0x5b, 0x48, 0x80, 0x8b, 0x39, 0xb7,
	0x38, 0x5d, 0x82, 0x49, 0x81, 0x51, 0x83, 0x33, 0x08, 0xc4, 0x14, 0x32, 0xe2, 0x62, 0x49, 0x49,
	0x2c, 0x49, 0x94, 0x60, 0x56, 0x60, 0xd4, 0xe0, 0x36, 0x92, 0xd3, 0x83, 0xda, 0x8a, 0x69, 0x9e,
	0x4b, 0x62, 0x49, 0x62, 0x10, 0x58, 0xad, 0x92, 0x25, 0x97, 0x18, 0x76, 0x79, 0x21, 0x79, 0x2e,
	0x6e, 0x88, 0x01, 0xf1, 0x25, 0x99, 0xb9, 0x10, 0xab, 0x59, 0x82, 0xb8, 0x8a, 0xe1, 0x8a, 0x8d,
	0x02, 0xb8, 0xd8, 0x20, 0x5a, 0x85, 0xdc, 0xb8, 0x78, 0xdd, 0x53, 0x4b, 0x10, 0xe6, 0x08, 0x49,
	0x62, 0xb3, 0x1b, 0xec, 0x41, 0x29, 0x29, 0xdc, 0xce, 0x4a, 0x62, 0x03, 0x07, 0x90, 0x31, 0x20,
	0x00, 0x00, 0xff, 0xff, 0xbd, 0x5b, 0x7f, 0xb6, 0x30, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ServerClient is the client API for Server service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ServerClient interface {
	GetServerTime(ctx context.Context, in *ServerTimeRequest, opts ...grpc.CallOption) (*ServerTimeResponse, error)
}

type serverClient struct {
	cc *grpc.ClientConn
}

func NewServerClient(cc *grpc.ClientConn) ServerClient {
	return &serverClient{cc}
}

func (c *serverClient) GetServerTime(ctx context.Context, in *ServerTimeRequest, opts ...grpc.CallOption) (*ServerTimeResponse, error) {
	out := new(ServerTimeResponse)
	err := c.cc.Invoke(ctx, "/server.Server/GetServerTime", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ServerServer is the server API for Server service.
type ServerServer interface {
	GetServerTime(context.Context, *ServerTimeRequest) (*ServerTimeResponse, error)
}

// UnimplementedServerServer can be embedded to have forward compatible implementations.
type UnimplementedServerServer struct {
}

func (*UnimplementedServerServer) GetServerTime(ctx context.Context, req *ServerTimeRequest) (*ServerTimeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetServerTime not implemented")
}

func RegisterServerServer(s *grpc.Server, srv ServerServer) {
	s.RegisterService(&_Server_serviceDesc, srv)
}

func _Server_GetServerTime_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ServerTimeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServerServer).GetServerTime(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/server.Server/GetServerTime",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServerServer).GetServerTime(ctx, req.(*ServerTimeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Server_serviceDesc = grpc.ServiceDesc{
	ServiceName: "server.Server",
	HandlerType: (*ServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetServerTime",
			Handler:    _Server_GetServerTime_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "server.proto",
}
